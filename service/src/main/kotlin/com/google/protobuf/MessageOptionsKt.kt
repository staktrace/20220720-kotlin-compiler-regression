//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: google/protobuf/descriptor.proto

package com.google.protobuf;

@kotlin.jvm.JvmSynthetic
public inline fun messageOptions(block: com.google.protobuf.MessageOptionsKt.Dsl.() -> kotlin.Unit): com.google.protobuf.DescriptorProtos.MessageOptions =
  com.google.protobuf.MessageOptionsKt.Dsl._create(com.google.protobuf.DescriptorProtos.MessageOptions.newBuilder()).apply { block() }._build()
public object MessageOptionsKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.google.protobuf.DescriptorProtos.MessageOptions.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.google.protobuf.DescriptorProtos.MessageOptions.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.google.protobuf.DescriptorProtos.MessageOptions = _builder.build()

    /**
     * <pre>
     * Set true to use the old proto1 MessageSet wire format for extensions.
     * This is provided for backwards-compatibility with the MessageSet wire
     * format.  You should not use this for any other reason:  It's less
     * efficient, has fewer features, and is more complicated.
     * The message must be defined exactly as follows:
     *   message Foo {
     *     option message_set_wire_format = true;
     *     extensions 4 to max;
     *   }
     * Note that the message cannot have any defined fields; MessageSets only
     * have extensions.
     * All extensions of your type must be singular messages; e.g. they cannot
     * be int32s, enums, or repeated messages.
     * Because this is an option, the above two restrictions are not enforced by
     * the protocol compiler.
     * </pre>
     *
     * <code>optional bool message_set_wire_format = 1 [default = false];</code>
     */
    public var messageSetWireFormat: kotlin.Boolean
      @JvmName("getMessageSetWireFormat")
      get() = _builder.getMessageSetWireFormat()
      @JvmName("setMessageSetWireFormat")
      set(value) {
        _builder.setMessageSetWireFormat(value)
      }
    /**
     * <pre>
     * Set true to use the old proto1 MessageSet wire format for extensions.
     * This is provided for backwards-compatibility with the MessageSet wire
     * format.  You should not use this for any other reason:  It's less
     * efficient, has fewer features, and is more complicated.
     * The message must be defined exactly as follows:
     *   message Foo {
     *     option message_set_wire_format = true;
     *     extensions 4 to max;
     *   }
     * Note that the message cannot have any defined fields; MessageSets only
     * have extensions.
     * All extensions of your type must be singular messages; e.g. they cannot
     * be int32s, enums, or repeated messages.
     * Because this is an option, the above two restrictions are not enforced by
     * the protocol compiler.
     * </pre>
     *
     * <code>optional bool message_set_wire_format = 1 [default = false];</code>
     */
    public fun clearMessageSetWireFormat() {
      _builder.clearMessageSetWireFormat()
    }
    /**
     * <pre>
     * Set true to use the old proto1 MessageSet wire format for extensions.
     * This is provided for backwards-compatibility with the MessageSet wire
     * format.  You should not use this for any other reason:  It's less
     * efficient, has fewer features, and is more complicated.
     * The message must be defined exactly as follows:
     *   message Foo {
     *     option message_set_wire_format = true;
     *     extensions 4 to max;
     *   }
     * Note that the message cannot have any defined fields; MessageSets only
     * have extensions.
     * All extensions of your type must be singular messages; e.g. they cannot
     * be int32s, enums, or repeated messages.
     * Because this is an option, the above two restrictions are not enforced by
     * the protocol compiler.
     * </pre>
     *
     * <code>optional bool message_set_wire_format = 1 [default = false];</code>
     * @return Whether the messageSetWireFormat field is set.
     */
    public fun hasMessageSetWireFormat(): kotlin.Boolean {
      return _builder.hasMessageSetWireFormat()
    }

    /**
     * <pre>
     * Disables the generation of the standard "descriptor()" accessor, which can
     * conflict with a field of the same name.  This is meant to make migration
     * from proto1 easier; new code should avoid fields named "descriptor".
     * </pre>
     *
     * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
     */
    public var noStandardDescriptorAccessor: kotlin.Boolean
      @JvmName("getNoStandardDescriptorAccessor")
      get() = _builder.getNoStandardDescriptorAccessor()
      @JvmName("setNoStandardDescriptorAccessor")
      set(value) {
        _builder.setNoStandardDescriptorAccessor(value)
      }
    /**
     * <pre>
     * Disables the generation of the standard "descriptor()" accessor, which can
     * conflict with a field of the same name.  This is meant to make migration
     * from proto1 easier; new code should avoid fields named "descriptor".
     * </pre>
     *
     * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
     */
    public fun clearNoStandardDescriptorAccessor() {
      _builder.clearNoStandardDescriptorAccessor()
    }
    /**
     * <pre>
     * Disables the generation of the standard "descriptor()" accessor, which can
     * conflict with a field of the same name.  This is meant to make migration
     * from proto1 easier; new code should avoid fields named "descriptor".
     * </pre>
     *
     * <code>optional bool no_standard_descriptor_accessor = 2 [default = false];</code>
     * @return Whether the noStandardDescriptorAccessor field is set.
     */
    public fun hasNoStandardDescriptorAccessor(): kotlin.Boolean {
      return _builder.hasNoStandardDescriptorAccessor()
    }

    /**
     * <pre>
     * Is this message deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the message, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating messages.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    public var deprecated: kotlin.Boolean
      @JvmName("getDeprecated")
      get() = _builder.getDeprecated()
      @JvmName("setDeprecated")
      set(value) {
        _builder.setDeprecated(value)
      }
    /**
     * <pre>
     * Is this message deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the message, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating messages.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     */
    public fun clearDeprecated() {
      _builder.clearDeprecated()
    }
    /**
     * <pre>
     * Is this message deprecated?
     * Depending on the target platform, this can emit Deprecated annotations
     * for the message, or it will be completely ignored; in the very least,
     * this is a formalization for deprecating messages.
     * </pre>
     *
     * <code>optional bool deprecated = 3 [default = false];</code>
     * @return Whether the deprecated field is set.
     */
    public fun hasDeprecated(): kotlin.Boolean {
      return _builder.hasDeprecated()
    }

    /**
     * <pre>
     * Whether the message is an automatically generated map entry type for the
     * maps field.
     * For maps fields:
     *     map&lt;KeyType, ValueType&gt; map_field = 1;
     * The parsed descriptor looks like:
     *     message MapFieldEntry {
     *         option map_entry = true;
     *         optional KeyType key = 1;
     *         optional ValueType value = 2;
     *     }
     *     repeated MapFieldEntry map_field = 1;
     * Implementations may choose not to generate the map_entry=true message, but
     * use a native map in the target language to hold the keys and values.
     * The reflection APIs in such implementations still need to work as
     * if the field is a repeated message field.
     * NOTE: Do not set the option in .proto files. Always use the maps syntax
     * instead. The option should only be implicitly set by the proto compiler
     * parser.
     * </pre>
     *
     * <code>optional bool map_entry = 7;</code>
     */
    public var mapEntry: kotlin.Boolean
      @JvmName("getMapEntry")
      get() = _builder.getMapEntry()
      @JvmName("setMapEntry")
      set(value) {
        _builder.setMapEntry(value)
      }
    /**
     * <pre>
     * Whether the message is an automatically generated map entry type for the
     * maps field.
     * For maps fields:
     *     map&lt;KeyType, ValueType&gt; map_field = 1;
     * The parsed descriptor looks like:
     *     message MapFieldEntry {
     *         option map_entry = true;
     *         optional KeyType key = 1;
     *         optional ValueType value = 2;
     *     }
     *     repeated MapFieldEntry map_field = 1;
     * Implementations may choose not to generate the map_entry=true message, but
     * use a native map in the target language to hold the keys and values.
     * The reflection APIs in such implementations still need to work as
     * if the field is a repeated message field.
     * NOTE: Do not set the option in .proto files. Always use the maps syntax
     * instead. The option should only be implicitly set by the proto compiler
     * parser.
     * </pre>
     *
     * <code>optional bool map_entry = 7;</code>
     */
    public fun clearMapEntry() {
      _builder.clearMapEntry()
    }
    /**
     * <pre>
     * Whether the message is an automatically generated map entry type for the
     * maps field.
     * For maps fields:
     *     map&lt;KeyType, ValueType&gt; map_field = 1;
     * The parsed descriptor looks like:
     *     message MapFieldEntry {
     *         option map_entry = true;
     *         optional KeyType key = 1;
     *         optional ValueType value = 2;
     *     }
     *     repeated MapFieldEntry map_field = 1;
     * Implementations may choose not to generate the map_entry=true message, but
     * use a native map in the target language to hold the keys and values.
     * The reflection APIs in such implementations still need to work as
     * if the field is a repeated message field.
     * NOTE: Do not set the option in .proto files. Always use the maps syntax
     * instead. The option should only be implicitly set by the proto compiler
     * parser.
     * </pre>
     *
     * <code>optional bool map_entry = 7;</code>
     * @return Whether the mapEntry field is set.
     */
    public fun hasMapEntry(): kotlin.Boolean {
      return _builder.hasMapEntry()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class UninterpretedOptionProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
     public val uninterpretedOption: com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.UninterpretedOption, UninterpretedOptionProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getUninterpretedOptionList()
      )
    /**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     * @param value The uninterpretedOption to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addUninterpretedOption")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.UninterpretedOption, UninterpretedOptionProxy>.add(value: com.google.protobuf.DescriptorProtos.UninterpretedOption) {
      _builder.addUninterpretedOption(value)
    }/**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     * @param value The uninterpretedOption to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignUninterpretedOption")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.UninterpretedOption, UninterpretedOptionProxy>.plusAssign(value: com.google.protobuf.DescriptorProtos.UninterpretedOption) {
      add(value)
    }/**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     * @param values The uninterpretedOption to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllUninterpretedOption")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.UninterpretedOption, UninterpretedOptionProxy>.addAll(values: kotlin.collections.Iterable<com.google.protobuf.DescriptorProtos.UninterpretedOption>) {
      _builder.addAllUninterpretedOption(values)
    }/**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     * @param values The uninterpretedOption to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllUninterpretedOption")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.UninterpretedOption, UninterpretedOptionProxy>.plusAssign(values: kotlin.collections.Iterable<com.google.protobuf.DescriptorProtos.UninterpretedOption>) {
      addAll(values)
    }/**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     * @param index The index to set the value at.
     * @param value The uninterpretedOption to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setUninterpretedOption")
    public operator fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.UninterpretedOption, UninterpretedOptionProxy>.set(index: kotlin.Int, value: com.google.protobuf.DescriptorProtos.UninterpretedOption) {
      _builder.setUninterpretedOption(index, value)
    }/**
     * <pre>
     * The parser stores options it doesn't recognize here. See above.
     * </pre>
     *
     * <code>repeated .google.protobuf.UninterpretedOption uninterpreted_option = 999;</code>
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearUninterpretedOption")
    public fun com.google.protobuf.kotlin.DslList<com.google.protobuf.DescriptorProtos.UninterpretedOption, UninterpretedOptionProxy>.clear() {
      _builder.clearUninterpretedOption()
    }@Suppress("UNCHECKED_CAST")
    @kotlin.jvm.JvmSynthetic
    public operator fun <T> get(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.DescriptorProtos.MessageOptions, T>): T {
      return if (extension.isRepeated) {
        get(extension as com.google.protobuf.ExtensionLite<com.google.protobuf.DescriptorProtos.MessageOptions, List<*>>) as T
      } else {
        _builder.getExtension(extension)
      }
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    @kotlin.jvm.JvmName("-getRepeatedExtension")
    public operator fun <E> get(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.DescriptorProtos.MessageOptions, List<E>>
    ): com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.DescriptorProtos.MessageOptions> {
      return com.google.protobuf.kotlin.ExtensionList(extension, _builder.getExtension(extension))
    }

    @kotlin.jvm.JvmSynthetic
    public operator fun contains(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.DescriptorProtos.MessageOptions, *>): Boolean {
      return _builder.hasExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
    public fun clear(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.DescriptorProtos.MessageOptions, *>) {
      _builder.clearExtension(extension)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun <T> setExtension(extension: com.google.protobuf.ExtensionLite<com.google.protobuf.DescriptorProtos.MessageOptions, T>, value: T) {
      _builder.setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun <T : Comparable<T>> set(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.DescriptorProtos.MessageOptions, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun set(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.DescriptorProtos.MessageOptions, com.google.protobuf.ByteString>,
      value: com.google.protobuf.ByteString
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun <T : com.google.protobuf.MessageLite> set(
      extension: com.google.protobuf.ExtensionLite<com.google.protobuf.DescriptorProtos.MessageOptions, T>,
      value: T
    ) {
      setExtension(extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    public fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.DescriptorProtos.MessageOptions>.add(value: E) {
      _builder.addExtension(this.extension, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.DescriptorProtos.MessageOptions>.plusAssign(value: E) {
      add(value)
    }

    @kotlin.jvm.JvmSynthetic
    public fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.DescriptorProtos.MessageOptions>.addAll(values: Iterable<E>) {
      for (value in values) {
        add(value)
      }
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.DescriptorProtos.MessageOptions>.plusAssign(values: Iterable<E>) {
      addAll(values)
    }

    @kotlin.jvm.JvmSynthetic
    public operator fun <E> com.google.protobuf.kotlin.ExtensionList<E, com.google.protobuf.DescriptorProtos.MessageOptions>.set(index: Int, value: E) {
      _builder.setExtension(this.extension, index, value)
    }

    @kotlin.jvm.JvmSynthetic
    @Suppress("NOTHING_TO_INLINE")
    public inline fun com.google.protobuf.kotlin.ExtensionList<*, com.google.protobuf.DescriptorProtos.MessageOptions>.clear() {
      clear(extension)
    }

  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.google.protobuf.DescriptorProtos.MessageOptions.copy(block: com.google.protobuf.MessageOptionsKt.Dsl.() -> kotlin.Unit): com.google.protobuf.DescriptorProtos.MessageOptions =
  com.google.protobuf.MessageOptionsKt.Dsl._create(this.toBuilder()).apply { block() }._build()
